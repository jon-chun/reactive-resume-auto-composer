name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies with uv
        run: |
          uv pip install -r requirements.txt
          uv pip install -r requirements-dev.txt
          uv pip install -e .

      - name: Lint (ruff)
        run: |
          ruff src tests

      - name: Format check (black)
        run: |
          black --check src tests

      - name: Type check (mypy)
        run: |
          mypy src || true  # keep non-blocking initially

      - name: Run tests
        run: |
          pytest -q --cov=src --cov-report=term-missing

      - name: Upload test artifacts (outputs & logs if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rrac-artifacts
          path: |
            output/**
            logs/**
          if-no-files-found: ignore
